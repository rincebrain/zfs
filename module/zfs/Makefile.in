ifneq ($(KBUILD_EXTMOD),)
src = @abs_srcdir@
obj = @abs_builddir@
mfdir = $(obj)
else
mfdir = $(srctree)/$(src)
endif

MODULE := zfs

obj-$(CONFIG_ZFS) := $(MODULE).o

# Suppress unused-value warnings in sparc64 architecture headers
ccflags-$(CONFIG_SPARC64) += -Wno-unused-value
ccflags-y += -Wno-error

$(MODULE)-objs += abd.o
$(MODULE)-objs += aggsum.o
$(MODULE)-objs += arc.o
$(MODULE)-objs += blkptr.o
$(MODULE)-objs += bplist.o
$(MODULE)-objs += bpobj.o
$(MODULE)-objs += bptree.o
$(MODULE)-objs += btree.o
$(MODULE)-objs += bqueue.o
$(MODULE)-objs += dataset_kstats.o
$(MODULE)-objs += dbuf.o
$(MODULE)-objs += dbuf_stats.o
$(MODULE)-objs += ddt.o
$(MODULE)-objs += ddt_zap.o
$(MODULE)-objs += dmu.o
$(MODULE)-objs += dmu_diff.o
$(MODULE)-objs += dmu_object.o
$(MODULE)-objs += dmu_objset.o
$(MODULE)-objs += dmu_recv.o
$(MODULE)-objs += dmu_redact.o
$(MODULE)-objs += dmu_send.o
$(MODULE)-objs += dmu_traverse.o
$(MODULE)-objs += dmu_tx.o
$(MODULE)-objs += dmu_zfetch.o
$(MODULE)-objs += dnode.o
$(MODULE)-objs += dnode_sync.o
$(MODULE)-objs += dsl_bookmark.o
$(MODULE)-objs += dsl_crypt.o
$(MODULE)-objs += dsl_dataset.o
$(MODULE)-objs += dsl_deadlist.o
$(MODULE)-objs += dsl_deleg.o
$(MODULE)-objs += dsl_destroy.o
$(MODULE)-objs += dsl_dir.o
$(MODULE)-objs += dsl_pool.o
$(MODULE)-objs += dsl_prop.o
$(MODULE)-objs += dsl_scan.o
$(MODULE)-objs += dsl_synctask.o
$(MODULE)-objs += dsl_userhold.o
$(MODULE)-objs += edonr_zfs.o
$(MODULE)-objs += fm.o
$(MODULE)-objs += gzip_simd.o
$(MODULE)-objs += hkdf.o
$(MODULE)-objs += lz4.o
$(MODULE)-objs += lz4_zfs.o
$(MODULE)-objs += lzjb.o
$(MODULE)-objs += metaslab.o
$(MODULE)-objs += mmp.o
$(MODULE)-objs += multilist.o
$(MODULE)-objs += objlist.o
$(MODULE)-objs += pathname.o
$(MODULE)-objs += range_tree.o
$(MODULE)-objs += refcount.o
$(MODULE)-objs += rrwlock.o
$(MODULE)-objs += sa.o
$(MODULE)-objs += sha256.o
$(MODULE)-objs += skein_zfs.o
$(MODULE)-objs += spa.o
$(MODULE)-objs += spa_boot.o
$(MODULE)-objs += spa_checkpoint.o
$(MODULE)-objs += spa_config.o
$(MODULE)-objs += spa_errlog.o
$(MODULE)-objs += spa_history.o
$(MODULE)-objs += spa_log_spacemap.o
$(MODULE)-objs += spa_misc.o
$(MODULE)-objs += spa_stats.o
$(MODULE)-objs += space_map.o
$(MODULE)-objs += space_reftree.o
$(MODULE)-objs += txg.o
$(MODULE)-objs += uberblock.o
$(MODULE)-objs += unique.o
$(MODULE)-objs += vdev.o
$(MODULE)-objs += vdev_cache.o
$(MODULE)-objs += vdev_draid.o
$(MODULE)-objs += vdev_draid_rand.o
$(MODULE)-objs += vdev_indirect.o
$(MODULE)-objs += vdev_indirect_births.o
$(MODULE)-objs += vdev_indirect_mapping.o
$(MODULE)-objs += vdev_initialize.o
$(MODULE)-objs += vdev_label.o
$(MODULE)-objs += vdev_mirror.o
$(MODULE)-objs += vdev_missing.o
$(MODULE)-objs += vdev_queue.o
$(MODULE)-objs += vdev_raidz.o
$(MODULE)-objs += vdev_raidz_math.o
$(MODULE)-objs += vdev_raidz_math_scalar.o
$(MODULE)-objs += vdev_rebuild.o
$(MODULE)-objs += vdev_removal.o
$(MODULE)-objs += vdev_root.o
$(MODULE)-objs += vdev_trim.o
$(MODULE)-objs += zap.o
$(MODULE)-objs += zap_leaf.o
$(MODULE)-objs += zap_micro.o
$(MODULE)-objs += zcp.o
$(MODULE)-objs += zcp_get.o
$(MODULE)-objs += zcp_global.o
$(MODULE)-objs += zcp_iter.o
$(MODULE)-objs += zcp_set.o
$(MODULE)-objs += zcp_synctask.o
$(MODULE)-objs += zfeature.o
$(MODULE)-objs += zfs_byteswap.o
$(MODULE)-objs += zfs_fm.o
$(MODULE)-objs += zfs_fuid.o
$(MODULE)-objs += zfs_ioctl.o
$(MODULE)-objs += zfs_log.o
$(MODULE)-objs += zfs_onexit.o
$(MODULE)-objs += zfs_quota.o
$(MODULE)-objs += zfs_ratelimit.o
$(MODULE)-objs += zfs_replay.o
$(MODULE)-objs += zfs_rlock.o
$(MODULE)-objs += zfs_sa.o
$(MODULE)-objs += zfs_vnops.o
$(MODULE)-objs += zil.o
$(MODULE)-objs += zio.o
$(MODULE)-objs += zio_checksum.o
$(MODULE)-objs += zio_compress.o
$(MODULE)-objs += zio_inject.o
$(MODULE)-objs += zle.o
$(MODULE)-objs += zrlock.o
$(MODULE)-objs += zthr.o
$(MODULE)-objs += zvol.o

$(MODULE)-objs += zlib-ng/deflate.o
$(MODULE)-objs += zlib-ng/compare256.o
$(MODULE)-objs += zlib-ng/crc32_fold.o
$(MODULE)-objs += zlib-ng/chunkset.o
$(MODULE)-objs += zlib-ng/cpu_features.o
$(MODULE)-objs += zlib-ng/deflate_quick.o
$(MODULE)-objs += zlib-ng/deflate_medium.o
$(MODULE)-objs += zlib-ng/deflate_stored.o
$(MODULE)-objs += zlib-ng/deflate_fast.o
$(MODULE)-objs += zlib-ng/deflate_slow.o
$(MODULE)-objs += zlib-ng/deflate_rle.o
$(MODULE)-objs += zlib-ng/deflate_huff.o
$(MODULE)-objs += zlib-ng/functable.o
$(MODULE)-objs += zlib-ng/inflate.o
$(MODULE)-objs += zlib-ng/inffast.o
$(MODULE)-objs += zlib-ng/inftrees.o
$(MODULE)-objs += zlib-ng/insert_string.o
$(MODULE)-objs += zlib-ng/slide_hash.o
$(MODULE)-objs += zlib-ng/compress.o
$(MODULE)-objs += zlib-ng/crc32.o
$(MODULE)-objs += zlib-ng/adler32.o
$(MODULE)-objs += zlib-ng/trees.o
$(MODULE)-objs += zlib-ng/uncompr.o
$(MODULE)-objs += zlib-ng/insert_string_roll.o
$(MODULE)-$(CONFIG_X86) += zlib-ng/arch/x86/adler32_avx2.o
$(MODULE)-$(CONFIG_X86) += zlib-ng/arch/x86/adler32_avx512.o
$(MODULE)-$(CONFIG_X86) += zlib-ng/arch/x86/adler32_avx512_vnni.o
$(MODULE)-$(CONFIG_X86) += zlib-ng/arch/x86/adler32_sse41.o
$(MODULE)-$(CONFIG_X86) += zlib-ng/arch/x86/adler32_ssse3.o
$(MODULE)-$(CONFIG_X86) += zlib-ng/arch/x86/chunkset_avx.o
$(MODULE)-$(CONFIG_X86) += zlib-ng/arch/x86/chunkset_sse2.o
$(MODULE)-$(CONFIG_X86) += zlib-ng/arch/x86/compare256_avx2.o
$(MODULE)-$(CONFIG_X86) += zlib-ng/arch/x86/compare256_sse2.o
$(MODULE)-$(CONFIG_X86) += zlib-ng/arch/x86/crc32_fold_pclmulqdq.o
$(MODULE)-$(CONFIG_X86) += zlib-ng/arch/x86/crc32_fold_vpclmulqdq.o
$(MODULE)-$(CONFIG_X86) += zlib-ng/arch/x86/insert_string_sse42.o
$(MODULE)-$(CONFIG_X86) += zlib-ng/arch/x86/slide_hash_avx2.o
$(MODULE)-$(CONFIG_X86) += zlib-ng/arch/x86/slide_hash_sse2.o
$(MODULE)-$(CONFIG_X86) += zlib-ng/arch/x86/x86_features.o

#$(MODULE)-objs += zlib-ng/match32.o
#$(MODULE)-$(CONFIG_X86) += zlib-ng/inffast_chunk.o
#$(MODULE)-$(CONFIG_AARCH64) += zlib-ng/inffast_chunk.o
#$(MODULE)-objs += zlib-ng/cpu_features.o
#$(MODULE)-$(CONFIG_X86) += zlib-ng/fill_window_sse.o
#$(MODULE)-$(CONFIG_X86) += zlib-ng/adler32_simd.o
#$(MODULE)-$(CONFIG_X86) += zlib-ng/crc32_simd.o
#$(MODULE)-$(CONFIG_X86) += zlib-ng/crc_folding.o

# Suppress incorrect warnings from versions of objtool which are not
# aware of x86 EVEX prefix instructions used for AVX512.
OBJECT_FILES_NON_STANDARD_vdev_raidz_math_avx512bw.o := y
OBJECT_FILES_NON_STANDARD_vdev_raidz_math_avx512f.o := y

EXCLUDEME := -mno-sse -mno-avx -mno-avx2 -mno-sse3 -mno-ssse3 -mgeneral-regs-only -mtune=generic -mno-mmx -mno-sse2 -mno-3dnow -mno-80387 $(EXCLUDEALL)
INCLUDEME := -march=native -mtune=native -O3
# this might be redundant but two copies should be safer than none...
# and 5.15 stopped including it in general, so no intrinsics for us otherwise.
INCLUDEME += -isystem $(shell $(CC) -print-file-name=include)
# zlib-ng fun
ZLIBNG := -DNDEBUG -D_LARGEFILE64_SOURCE=1 -DHAVE_POSIX_MEMALIGN -DZLIB_COMPAT -DWITH_GZFILEOP -fno-semantic-interposition -DHAVE_VISIBILITY_HIDDEN -DHAVE_VISIBILITY_INTERNAL -DHAVE_BUILTIN_CTZ -DHAVE_BUILTIN_CTZLL -DUNALIGNED_OK -DUNALIGNED64_OK -DX86_FEATURES -DX86_AVX2 -DX86_AVX2_ADLER32 -DX86_AVX_CHUNKSET -DX86_SSE41_ADLER32 -DX86_SSE42_CRC_HASH -DX86_SSE42_CRC_INTRIN -DX86_SSE2 -DX86_SSE2_CHUNKSET -DX86_SSSE3 -DX86_SSSE3_ADLER32 -DX86_PCLMULQDQ_CRC
ZLIBSTRIP := -DDEBUG -UNDEBUG
#ZLIBVROOM := -DINFLATE_CHUNK_SIMD_SSE2 -DHAS_SSE42 -DHAS_PCLMUL -DADLER32_SIMD_SSSE3 -DINFLATE_CHUNK_READ_64LE -DDEFLATE_FILL_WINDOW_SSE2 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN -mavx2 -ftree-vectorize
ZLIBVROOM := $(ZLIBNG)
ZLIBINC := $(ZLIBVROOM)

CFLAGS_REMOVE_zlib-ng/deflate.o += $(EXCLUDEME) $(ZLIBSTRIP)
CFLAGS_zlib-ng/deflate.o += $(INCLUDEME) -I$(mfdir)/zlib-ng/ $(ZLIBINC)

CFLAGS_REMOVE_zlib-ng/uncompr.o += $(EXCLUDEME) $(ZLIBSTRIP)
CFLAGS_zlib-ng/uncompr.o += $(INCLUDEME) -I$(mfdir)/zlib-ng/ $(ZLIBINC)

CFLAGS_REMOVE_zlib-ng/slide_hash.o += $(EXCLUDEME) $(ZLIBSTRIP)
CFLAGS_zlib-ng/slide_hash.o += $(INCLUDEME) -I$(mfdir)/zlib-ng/ $(ZLIBINC)

CFLAGS_REMOVE_zlib-ng/chunkset.o += $(EXCLUDEME) $(ZLIBSTRIP)
CFLAGS_zlib-ng/chunkset.o += $(INCLUDEME) -I$(mfdir)/zlib-ng/ $(ZLIBINC)

CFLAGS_REMOVE_zlib-ng/crc32_fold.o += $(EXCLUDEME) $(ZLIBSTRIP)
CFLAGS_zlib-ng/crc32_fold.o += $(INCLUDEME) -I$(mfdir)/zlib-ng/ $(ZLIBINC)

CFLAGS_REMOVE_zlib-ng/functable.o += $(EXCLUDEME) $(ZLIBSTRIP)
CFLAGS_zlib-ng/functable.o += $(INCLUDEME) -I$(mfdir)/zlib-ng/ $(ZLIBINC) -fno-jump-tables -funwind-tables

CFLAGS_REMOVE_zlib-ng/insert_string.o += $(EXCLUDEME) $(ZLIBSTRIP)
CFLAGS_zlib-ng/insert_string.o += $(INCLUDEME) -I$(mfdir)/zlib-ng/ $(ZLIBINC)

CFLAGS_REMOVE_zlib-ng/compare256.o += $(EXCLUDEME) $(ZLIBSTRIP)
CFLAGS_zlib-ng/compare256.o += $(INCLUDEME) -I$(mfdir)/zlib-ng/ $(ZLIBINC)

CFLAGS_REMOVE_zlib-ng/deflate_quick.o += $(EXCLUDEME) $(ZLIBSTRIP)
CFLAGS_zlib-ng/deflate_quick.o += $(INCLUDEME) -I$(mfdir)/zlib-ng/ $(ZLIBINC)

CFLAGS_REMOVE_zlib-ng/deflate_rle.o += $(EXCLUDEME) $(ZLIBSTRIP)
CFLAGS_zlib-ng/deflate_rle.o += $(INCLUDEME) -I$(mfdir)/zlib-ng/ $(ZLIBINC)

CFLAGS_REMOVE_zlib-ng/deflate_huff.o += $(EXCLUDEME) $(ZLIBSTRIP)
CFLAGS_zlib-ng/deflate_huff.o += $(INCLUDEME) -I$(mfdir)/zlib-ng/ $(ZLIBINC)

CFLAGS_REMOVE_zlib-ng/deflate_slow.o += $(EXCLUDEME) $(ZLIBSTRIP)
CFLAGS_zlib-ng/deflate_slow.o += $(INCLUDEME) -I$(mfdir)/zlib-ng/ $(ZLIBINC)

CFLAGS_REMOVE_zlib-ng/deflate_fast.o += $(EXCLUDEME) $(ZLIBSTRIP)
CFLAGS_zlib-ng/deflate_fast.o += $(INCLUDEME) -I$(mfdir)/zlib-ng/ $(ZLIBINC)

CFLAGS_REMOVE_zlib-ng/deflate_medium.o += $(EXCLUDEME) $(ZLIBSTRIP)
CFLAGS_zlib-ng/deflate_medium.o += $(INCLUDEME) -I$(mfdir)/zlib-ng/ $(ZLIBINC)

CFLAGS_REMOVE_zlib-ng/deflate_stored.o += $(EXCLUDEME) $(ZLIBSTRIP)
CFLAGS_zlib-ng/deflate_stored.o += $(INCLUDEME) -I$(mfdir)/zlib-ng/ $(ZLIBINC)

CFLAGS_REMOVE_zlib-ng/cpu_features.o += $(EXCLUDEME) $(ZLIBSTRIP)
CFLAGS_zlib-ng/cpu_features.o += $(INCLUDEME) -I$(mfdir)/zlib-ng/ $(ZLIBINC)

CFLAGS_REMOVE_zlib-ng/deflate_quick.o += $(EXCLUDEME) $(ZLIBSTRIP)
CFLAGS_zlib-ng/deflate_quick.o += $(INCLUDEME) -I$(mfdir)/zlib-ng/ $(ZLIBINC)

CFLAGS_REMOVE_zlib-ng/insert_string_roll.o += $(EXCLUDEME) $(ZLIBSTRIP)
CFLAGS_zlib-ng/insert_string_roll.o += $(INCLUDEME) -I$(mfdir)/zlib-ng/ $(ZLIBINC)

CFLAGS_REMOVE_zlib-ng/cpu_features.o += $(EXCLUDEME) $(ZLIBSTRIP)
CFLAGS_zlib-ng/cpu_features.o += $(INCLUDEME) -I$(mfdir)/zlib-ng/ $(ZLIBINC)

CFLAGS_REMOVE_zlib-ng/inflate.o += $(EXCLUDEME) $(ZLIBSTRIP)
CFLAGS_zlib-ng/inflate.o += $(INCLUDEME) -I$(mfdir)/zlib-ng/ $(ZLIBINC)

CFLAGS_REMOVE_zlib-ng/compress.o += $(EXCLUDEME) $(ZLIBSTRIP)
CFLAGS_zlib-ng/compress.o += $(INCLUDEME) -I$(mfdir)/zlib-ng/ $(ZLIBINC)

CFLAGS_REMOVE_zlib-ng/crc32.o += $(EXCLUDEME) $(ZLIBSTRIP)
CFLAGS_zlib-ng/crc32.o += $(INCLUDEME) -I$(mfdir)/zlib-ng/ $(ZLIBINC)

CFLAGS_REMOVE_zlib-ng/adler32.o += $(EXCLUDEME) $(ZLIBSTRIP)
CFLAGS_zlib-ng/adler32.o += $(INCLUDEME) -I$(mfdir)/zlib-ng/ $(ZLIBINC)

CFLAGS_REMOVE_zlib-ng/inffast.o += $(EXCLUDEME) $(ZLIBSTRIP)
CFLAGS_zlib-ng/inffast.o += $(INCLUDEME) -I$(mfdir)/zlib-ng/ $(ZLIBINC)

CFLAGS_REMOVE_zlib-ng/inffast_chunk.o += $(EXCLUDEME) $(ZLIBSTRIP)
CFLAGS_zlib-ng/inffast_chunk.o += $(INCLUDEME) -I$(mfdir)/zlib-ng/ $(ZLIBINC)

CFLAGS_REMOVE_zlib-ng/inftrees.o += $(EXCLUDEME) $(ZLIBSTRIP)
CFLAGS_zlib-ng/inftrees.o += $(INCLUDEME) -I$(mfdir)/zlib-ng/ $(ZLIBINC)

CFLAGS_REMOVE_zlib-ng/trees.o += $(EXCLUDEME) $(ZLIBSTRIP)
CFLAGS_zlib-ng/trees.o += $(INCLUDEME) -I$(mfdir)/zlib-ng/ $(ZLIBINC)

CFLAGS_REMOVE_zlib-ng/fill_window_sse.o += $(EXCLUDEME) $(ZLIBSTRIP)
CFLAGS_zlib-ng/fill_window_sse.o += $(INCLUDEME) -I$(mfdir)/zlib-ng/ $(ZLIBINC)

CFLAGS_REMOVE_zlib-ng/adler32_simd.o += $(EXCLUDEME) $(ZLIBSTRIP)
CFLAGS_zlib-ng/adler32_simd.o += $(INCLUDEME) -I$(mfdir)/zlib-ng/ $(ZLIBINC)

CFLAGS_REMOVE_zlib-ng/crc32_simd.o += $(EXCLUDEME) $(ZLIBSTRIP)
CFLAGS_zlib-ng/crc32_simd.o += $(INCLUDEME) -I$(mfdir)/zlib-ng/ $(ZLIBINC)

CFLAGS_REMOVE_zlib-ng/crc_folding.o += $(EXCLUDEME) $(ZLIBSTRIP)
CFLAGS_zlib-ng/crc_folding.o += $(INCLUDEME) -I$(mfdir)/zlib-ng/ $(ZLIBINC)

CFLAGS_REMOVE_zlib-ng/arch/x86/adler32_avx2.o += $(EXCLUDEME) $(ZLIBSTRIP)
CFLAGS_zlib-ng/arch/x86/adler32_avx2.o += $(INCLUDEME) -I$(mfdir)/zlib-ng/ $(ZLIBINC)
CFLAGS_REMOVE_zlib-ng/arch/x86/adler32_avx512.o += $(EXCLUDEME) $(ZLIBSTRIP)
CFLAGS_zlib-ng/arch/x86/adler32_avx512.o += $(INCLUDEME) -I$(mfdir)/zlib-ng/ $(ZLIBINC)
CFLAGS_REMOVE_zlib-ng/arch/x86/adler32_avx512_vnni.o += $(EXCLUDEME) $(ZLIBSTRIP)
CFLAGS_zlib-ng/arch/x86/adler32_avx512_vnni.o += $(INCLUDEME) -I$(mfdir)/zlib-ng/ $(ZLIBINC)
CFLAGS_REMOVE_zlib-ng/arch/x86/adler32_sse41.o += $(EXCLUDEME) $(ZLIBSTRIP)
CFLAGS_zlib-ng/arch/x86/adler32_sse41.o += $(INCLUDEME) -I$(mfdir)/zlib-ng/ $(ZLIBINC)
CFLAGS_REMOVE_zlib-ng/arch/x86/adler32_ssse3.o += $(EXCLUDEME) $(ZLIBSTRIP)
CFLAGS_zlib-ng/arch/x86/adler32_ssse3.o += $(INCLUDEME) -I$(mfdir)/zlib-ng/ $(ZLIBINC)
CFLAGS_REMOVE_zlib-ng/arch/x86/chunkset_avx.o += $(EXCLUDEME) $(ZLIBSTRIP)
CFLAGS_zlib-ng/arch/x86/chunkset_avx.o += $(INCLUDEME) -I$(mfdir)/zlib-ng/ $(ZLIBINC)
CFLAGS_REMOVE_zlib-ng/arch/x86/chunkset_sse2.o += $(EXCLUDEME) $(ZLIBSTRIP)
CFLAGS_zlib-ng/arch/x86/chunkset_sse2.o += $(INCLUDEME) -I$(mfdir)/zlib-ng/ $(ZLIBINC)
CFLAGS_REMOVE_zlib-ng/arch/x86/compare256_avx2.o += $(EXCLUDEME) $(ZLIBSTRIP)
CFLAGS_zlib-ng/arch/x86/compare256_avx2.o += $(INCLUDEME) -I$(mfdir)/zlib-ng/ $(ZLIBINC)
CFLAGS_REMOVE_zlib-ng/arch/x86/compare256_sse2.o += $(EXCLUDEME) $(ZLIBSTRIP)
CFLAGS_zlib-ng/arch/x86/compare256_sse2.o += $(INCLUDEME) -I$(mfdir)/zlib-ng/ $(ZLIBINC)
CFLAGS_REMOVE_zlib-ng/arch/x86/crc32_fold_pclmulqdq.o += $(EXCLUDEME) $(ZLIBSTRIP)
CFLAGS_zlib-ng/arch/x86/crc32_fold_pclmulqdq.o += $(INCLUDEME) -I$(mfdir)/zlib-ng/ $(ZLIBINC)
CFLAGS_REMOVE_zlib-ng/arch/x86/crc32_fold_vpclmulqdq.o += $(EXCLUDEME) $(ZLIBSTRIP)
CFLAGS_zlib-ng/arch/x86/crc32_fold_vpclmulqdq.o += $(INCLUDEME) -I$(mfdir)/zlib-ng/ $(ZLIBINC)
CFLAGS_REMOVE_zlib-ng/arch/x86/insert_string_sse42.o += $(EXCLUDEME) $(ZLIBSTRIP)
CFLAGS_zlib-ng/arch/x86/insert_string_sse42.o += $(INCLUDEME) -I$(mfdir)/zlib-ng/ $(ZLIBINC)
CFLAGS_REMOVE_zlib-ng/arch/x86/slide_hash_avx2.o += $(EXCLUDEME) $(ZLIBSTRIP)
CFLAGS_zlib-ng/arch/x86/slide_hash_avx2.o += $(INCLUDEME) -I$(mfdir)/zlib-ng/ $(ZLIBINC)
CFLAGS_REMOVE_zlib-ng/arch/x86/slide_hash_sse2.o += $(EXCLUDEME) $(ZLIBSTRIP)
CFLAGS_zlib-ng/arch/x86/slide_hash_sse2.o += $(INCLUDEME) -I$(mfdir)/zlib-ng/ $(ZLIBINC)
CFLAGS_REMOVE_zlib-ng/arch/x86/x86_features.o += $(EXCLUDEME) $(ZLIBSTRIP)
CFLAGS_zlib-ng/arch/x86/x86_features.o += $(INCLUDEME) -I$(mfdir)/zlib-ng/ $(ZLIBINC)


$(MODULE)-$(CONFIG_X86) += vdev_raidz_math_sse2.o
$(MODULE)-$(CONFIG_X86) += vdev_raidz_math_ssse3.o
$(MODULE)-$(CONFIG_X86) += vdev_raidz_math_avx2.o
$(MODULE)-$(CONFIG_X86) += vdev_raidz_math_avx512f.o
$(MODULE)-$(CONFIG_X86) += vdev_raidz_math_avx512bw.o

$(MODULE)-$(CONFIG_ARM64) += vdev_raidz_math_aarch64_neon.o
$(MODULE)-$(CONFIG_ARM64) += vdev_raidz_math_aarch64_neonx2.o

$(MODULE)-$(CONFIG_PPC) += vdev_raidz_math_powerpc_altivec.o
$(MODULE)-$(CONFIG_PPC64) += vdev_raidz_math_powerpc_altivec.o

ifeq ($(CONFIG_ALTIVEC),y)
$(obj)/vdev_raidz_math_powerpc_altivec.o: c_flags += -maltivec
endif

include $(mfdir)/../os/linux/zfs/Makefile

